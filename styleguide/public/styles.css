@charset "UTF-8";
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.clearfix {
  overflow: auto; }

.container {
  background: #dfe9ee;
  padding-bottom: 200px;
  padding-top: 100px; }

.language-select {
  float: right;
  margin-top: 20px; }

/*
Elements

A constituent part of a block that can't be used outside of it.

Styleguide 1.
*/
.cui-background {
  background-color: #fff;
  padding: 20px; }

.cui-background--secondary {
  background-color: #DEE9EE;
  padding: 20px; }

body {
  color: #929292; }

h1, h2, h3, h4, h5, h6 {
  color: #000; }

.cui__italic,
.cui__bold {
  color: #929292;
  font-style: italic; }

p {
  color: #929292; }

.cui__link {
  color: #429DD1; }

.cui__ul, .cui__ol {
  padding-left: 40px; }

/*
Inputs

.cui-form__input--focus         - Styling when user clicks in a field to enter input
.cui-form__input.ng-invalid     - Styling after user has entered input that is invalid
.cui-form__input.ng-valid       - Styling after user has entered input that is valid

Markup: <input type="text" class="{{modifier_class}}"/>

Styleguide 1.3.1
*/
.cui-form__input {
  border: 1px solid #DEE9EE;
  height: 50px;
  width: 400px; }

.cui-form__input:focus,
.cui-form__input--focus {
  border: 1px solid #828483;
  outline: 0; }

.cui-form__input.ng-invalid {
  border: 1px solid #FF4400; }

.cui-form__input.ng-valid {
  border: 1px solid #47CBB4; }

/*
Dropdown

Markup: <select class="cui-form__select">
            <option value="helloo"></option>
            <option value="hellloooo"></option>
            <option value="hellllooooooo"></option>
            <option value="HELLO"></option>
          </select>

Styleguide 1.3.2
*/
select.cui-form__select {
  background: url("../images/dropdown-arrow.svg") right no-repeat;
  border: 1px solid #828483;
  height: 50px;
  width: 400px;
  -webkit-appearance: none;
  -webkit-border-radius: 0; }
  select.cui-form__select:focus {
    outline: 0; }

.cui-primary-colors,
.cui-secondary-colors {
  height: 6rem;
  width: 6rem; }

/*
Primary Colors

.cui-primary-colors--light          - Some text,
.cui-primary-colors--medium-light   - Some text,
.cui-primary-colors--medium         - Some text,
.cui-primary-colors--medium-dark    - Some text,
.cui-primary-colors--dark           - Some text,

Markup: <div class="cui-primary-colors {{modifier_class}}"></div>

Styleguide 1.4.1
*/
.cui-primary-colors--light {
  background-color: #87CEEC; }

.cui-primary-colors--medium-light {
  background-color: #429DD1; }

.cui-primary-colors--medium {
  background-color: #4582B4; }

.cui-primary-colors--medium-dark {
  background-color: #165E9B; }

.cui-primary-colors--dark {
  background-color: #0A2741; }

/*
Secondary Colors

.cui-secondary-colors--light          - Some text,
.cui-secondary-colors--medium-light   - Some text,
.cui-secondary-colors--medium         - Some text,
.cui-secondary-colors--dark           - Some text,

Markup: <div class="cui-secondary-colors {{modifier_class}}"></div>

Styleguide 1.4.2
*/
.cui-secondary-colors--light {
  background-color: #3CB371; }

.cui-secondary-colors--medium-light {
  background-color: #FFD700; }

.cui-secondary-colors--medium {
  background-color: #FF8C00; }

.cui-secondary-colors--dark {
  background-color: #FF4400; }

/*
Blocks

A logically and functionally independent page component, the equivalent of a component in Web Components. Blocks being independent allows for their re-use, as well as facilitating the project development and support process.

Styleguide 2.
*/
/*
CUI Wizard

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eu vehicula quam. In porta lorem turpis, eu lacinia sapien auctor ac. Donec vitae nibh egestas, cursus lacus vel, viverra mauris. Pellentesque maximus suscipit molestie. Vestibulum luctus augue nec efficitur pulvinar. Nunc purus dui, molestie eu tellus ac

Markup: <div class="cui-wizard">
          <div class="cui-wizard__title ng-binding">Create your security administrator account</div>
          <div class="cui-wizard__body">
            <cui-wizard step="1" clickable-indicators="" minimum-padding="30">
              <indicator-container><span class="step-indicator ng-binding ng-scope active" ng-click="goToStep(1)" style="cursor: pointer;">Organization info</span><span class="step-indicator ng-binding ng-scope" ng-click="goToStep(2)" style="cursor: pointer;">Sign on info</span><span class="step-indicator ng-binding ng-scope" ng-click="goToStep(3)" style="cursor: pointer;">User info</span><span class="step-indicator ng-binding ng-scope" ng-click="goToStep(4)" style="cursor: pointer;">Preferences</span><span class="step-indicator ng-binding ng-scope" ng-click="goToStep(5)" style="cursor: pointer;">Review</span></indicator-container>
              <step title="Organization info" class="active">
                <form name="organization" novalidate="" class="ng-pristine ng-invalid ng-invalid-required ng-valid-minlength">
                  <!-- organization name -->
                  <input type="text" ng-model="app.organization.name" name="name" class="cui-input cui-input--full ng-pristine ng-untouched ng-valid" disabled="">
                  <!-- company/division -->
                  <!-- ngIf: organization.division.$touched -->
                  <select ng-model="app.organization.division" name="division" class="cui-input cui-select cui-input--full ng-pristine ng-untouched ng-invalid ng-invalid-required" ng-required="true" ng-class="{'cui-input--error': organization.division.$touched &amp;&amp; organization.division.$invalid}" required="required">
                    <option value="" disabled="" selected="" class="ng-binding">Company / Division</option>
                    <!-- ngRepeat: division in app.organization.divisions --><option ng-repeat="division in app.organization.divisions" value="Web design" class="ng-binding ng-scope">Web design</option><!-- end ngRepeat: division in app.organization.divisions --><option ng-repeat="division in app.organization.divisions" value="UI development" class="ng-binding ng-scope">UI development</option><!-- end ngRepeat: division in app.organization.divisions --><option ng-repeat="division in app.organization.divisions" value="Wordpress development" class="ng-binding ng-scope">Wordpress development</option><!-- end ngRepeat: division in app.organization.divisions --><option ng-repeat="division in app.organization.divisions" value="Ruby development" class="ng-binding ng-scope">Ruby development</option><!-- end ngRepeat: division in app.organization.divisions -->
                  </select>
                  <!-- address -->
                  <!-- ngIf: organization.address1.$touched -->
                  <input type="text" ng-model="app.organization.address1" name="address1" class="cui-input cui-input--half ng-pristine ng-untouched ng-invalid ng-invalid-required ng-valid-minlength" ng-required="true" ng-minlength="10" ng-class="{'cui-input--error': organization.address1.$touched &amp;&amp; organization.address1.$invalid}" placeholder="Address 1" required="required">
                  <!-- address2 -->
                  <input type="text" ng-model="app.organization.address2" class="cui-input cui-input--half--right ng-pristine ng-untouched ng-valid" placeholder="Address 2">
                  <!-- country -->
                  <select ng-model="app.organization.country" class="cui-input cui-select cui-input--half ng-pristine ng-untouched ng-valid">
                    <option value="" disabled="" selected="" class="ng-binding">Country</option>
                    <!-- ngRepeat: country in app.organization.countries --><option ng-repeat="country in app.organization.countries" value="U.S.A" class="ng-binding ng-scope">U.S.A</option><!-- end ngRepeat: country in app.organization.countries --><option ng-repeat="country in app.organization.countries" value="Portugal" class="ng-binding ng-scope">Portugal</option><!-- end ngRepeat: country in app.organization.countries --><option ng-repeat="country in app.organization.countries" value="Spain" class="ng-binding ng-scope">Spain</option><!-- end ngRepeat: country in app.organization.countries -->
                  </select>
                  <!-- state/province -->
                  <select ng-model="app.organization.state" class="cui-input cui-select cui-input--half--right ng-pristine ng-untouched ng-valid">
                    <option value="" disabled="" selected="" class="ng-binding">State / Province</option>
                    <!-- ngRepeat: state in app.organization.states --><option ng-repeat="state in app.organization.states" value="IL" class="ng-binding ng-scope">IL</option><!-- end ngRepeat: state in app.organization.states --><option ng-repeat="state in app.organization.states" value="FL" class="ng-binding ng-scope">FL</option><!-- end ngRepeat: state in app.organization.states --><option ng-repeat="state in app.organization.states" value="NY" class="ng-binding ng-scope">NY</option><!-- end ngRepeat: state in app.organization.states --><option ng-repeat="state in app.organization.states" value="CA" class="ng-binding ng-scope">CA</option><!-- end ngRepeat: state in app.organization.states -->
                  </select>
                  <!-- city/region -->
                  <select ng-model="app.organization.city" class="cui-input cui-select cui-input--half ng-pristine ng-untouched ng-valid">
                    <option value="" disabled="" selected="" class="ng-binding">City</option>
                    <!-- ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Chicago" class="ng-binding ng-scope">Chicago</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Aurora" class="ng-binding ng-scope">Aurora</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Rockford" class="ng-binding ng-scope">Rockford</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Joliet" class="ng-binding ng-scope">Joliet</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Naperville" class="ng-binding ng-scope">Naperville</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Springfiled" class="ng-binding ng-scope">Springfiled</option><!-- end ngRepeat: city in app.organization.cities -->
                  </select>
                  <!-- postal code -->
                  <input type="text" ng-model="app.organization.postal" class="cui-input cui-input--half--right ng-pristine ng-untouched ng-valid" placeholder="Postal code">
                  <div class="cui-wizard__controls">
                    <button class="cui-wizard__next ng-binding" ng-class="{'cui-wizard__next--error' : invalidForm[1] &amp;&amp; organization.$invalid}" ng-click="nextWithErrorChecking(organization)">NEXT STEP</button>
                    <button class="cui-wizard__skip ng-binding" ng-class="{'cui-wizard__skip--show' : invalidForm[1] &amp;&amp; organization.$invalid}" ng-click="next()">cui-skip-for-now &gt;&gt;</button>
                  </div>
                </form>
              </step>
              <step title="Sign on info">
                <form name="signOn" novalidate="" class="ng-pristine ng-invalid ng-invalid-length ng-invalid-lowercase ng-invalid-uppercase ng-invalid-number ng-invalid-complex ng-invalid-required">
                  <!-- user ID -->
                  <input type="text" name="userID" ng-model="app.signOn.userID" class="cui-input cui-input--full ng-pristine ng-untouched ng-valid" placeholder="User ID">
                  <!-- password -->
                  <div style="position:relative; width:48%; display:inline-block">
                    <input type="password" name="password1" ng-model="app.signOn.password1" class="cui-input cui-input--half ng-pristine ng-untouched ng-invalid ng-invalid-length ng-invalid-lowercase ng-invalid-uppercase ng-invalid-number ng-invalid-complex ng-invalid-required" placeholder="Password" ng-required="true" ng-class="{'cui-input--error': signOn.password1.$touched &amp;&amp; signOn.password1.$invalid}" password-validation="" style="width:100%" required="required">
                    <!-- ngIf: signOn.password1.$dirty && signOn.password1.$invalid -->
                  </div>
                  <!-- password -->
                  <input type="password" ng-model="app.signOn.password2" class="cui-input cui-input--half--right ng-pristine ng-untouched ng-valid" placeholder="Re-enter password">
                  <!-- question 1 -->
                  <select ng-model="app.signOn.question1" class="cui-input cui-input--half ng-pristine ng-untouched ng-valid">
                    <option value="" disabled="" selected="" class="ng-binding">Challenge question 1</option>
                    <!-- ngRepeat: question in app.signOn.questions --><option ng-repeat="question in app.signOn.questions" value="0" class="ng-binding ng-scope">What's your favorite pet's name?</option><!-- end ngRepeat: question in app.signOn.questions --><option ng-repeat="question in app.signOn.questions" value="1" class="ng-binding ng-scope">What's your mother's maiden name?</option><!-- end ngRepeat: question in app.signOn.questions --><option ng-repeat="question in app.signOn.questions" value="2" class="ng-binding ng-scope">Who's your best friend?</option><!-- end ngRepeat: question in app.signOn.questions -->
                  </select>
                  <!-- answer 1 -->
                  <input type="text" ng-model="app.signOn.answer1" class="cui-input cui-input--half--right ng-pristine ng-untouched ng-valid" placeholder="Challenge answer 1">
                  <!-- question 2 -->
                  <select ng-model="app.signOn.question2" class="cui-input cui-input--half ng-pristine ng-untouched ng-valid">
                    <option value="" disabled="" selected="" class="ng-binding">Challenge question 2</option>
                    <!-- ngRepeat: question in app.signOn.questions --><option ng-repeat="question in app.signOn.questions" value="0" class="ng-binding ng-scope">What's your favorite pet's name?</option><!-- end ngRepeat: question in app.signOn.questions --><option ng-repeat="question in app.signOn.questions" value="1" class="ng-binding ng-scope">What's your mother's maiden name?</option><!-- end ngRepeat: question in app.signOn.questions --><option ng-repeat="question in app.signOn.questions" value="2" class="ng-binding ng-scope">Who's your best friend?</option><!-- end ngRepeat: question in app.signOn.questions -->
                  </select>
                  <!-- answer 2 -->
                  <input type="text" ng-model="app.signOn.answer2" class="cui-input cui-input--half--right ng-pristine ng-untouched ng-valid" placeholder="Challenge answer 2">
                   <div class="cui-wizard__controls">
                    <button class="cui-wizard__previous ng-binding" ng-click="previous()">&lt;&lt; PREVIOUS</button>
                    <button class="cui-wizard__next ng-binding" ng-class="{'cui-wizard__next--error' : invalidForm[2] &amp;&amp; signOn.$invalid}" ng-click="nextWithErrorChecking(signOn)">NEXT STEP</button>
                    <button class="cui-wizard__skip ng-binding" ng-class="{'cui-wizard__skip--show' : invalidForm[2] &amp;&amp; signOn.$invalid}" ng-click="next()">cui-skip-for-now &gt;&gt;</button>
                  </div>
                </form>
              </step>
              <step title="User info">
                <form name="user" novalidate="" class="ng-pristine ng-invalid ng-invalid-required ng-valid-email">
                  <!-- first name -->
                  <input type="text" ng-model="app.user.fName" class="cui-input cui-input--half ng-pristine ng-untouched ng-invalid ng-invalid-required" placeholder="First name" required="">
                  <!-- Last name -->
                  <input type="text" ng-model="app.user.lName" class="cui-input cui-input--half--right ng-pristine ng-untouched ng-valid" placeholder="Last name">
                  <!-- Email -->
                  <input type="email" ng-model="app.user.email" class="cui-input cui-input--half ng-pristine ng-untouched ng-valid-email ng-invalid ng-invalid-required" placeholder="Email" required="">
                  <!-- Email 2 -->
                  <input type="email" ng-model="app.user.email2" class="cui-input cui-input--half--right ng-pristine ng-untouched ng-valid ng-valid-email" placeholder="Re-enter email">
                  <!-- Address 1 -->
                  <input type="text" ng-model="app.user.address1" class="cui-input cui-input--half ng-pristine ng-untouched ng-invalid ng-invalid-required" placeholder="Address 1" required="">
                  <!-- Address 2 -->
                  <input type="text" ng-model="app.user.address2" class="cui-input cui-input--half--right ng-pristine ng-untouched ng-valid" placeholder="Address 2">
                  <!-- country -->
                  <select ng-model="app.user.country" class="cui-input cui-select cui-input--half ng-pristine ng-untouched ng-valid">
                    <option value="" disabled="" selected="" class="ng-binding">Country</option>
                    <!-- ngRepeat: country in app.organization.countries --><option ng-repeat="country in app.organization.countries" value="U.S.A" class="ng-binding ng-scope">U.S.A</option><!-- end ngRepeat: country in app.organization.countries --><option ng-repeat="country in app.organization.countries" value="Portugal" class="ng-binding ng-scope">Portugal</option><!-- end ngRepeat: country in app.organization.countries --><option ng-repeat="country in app.organization.countries" value="Spain" class="ng-binding ng-scope">Spain</option><!-- end ngRepeat: country in app.organization.countries -->
                  </select>
                  <!-- state/province -->
                  <select ng-model="app.user.state" class="cui-input cui-select cui-input--half--right ng-pristine ng-untouched ng-valid">
                    <option value="" disabled="" selected="" class="ng-binding">State / Province</option>
                    <!-- ngRepeat: state in app.organization.states --><option ng-repeat="state in app.organization.states" value="IL" class="ng-binding ng-scope">IL</option><!-- end ngRepeat: state in app.organization.states --><option ng-repeat="state in app.organization.states" value="FL" class="ng-binding ng-scope">FL</option><!-- end ngRepeat: state in app.organization.states --><option ng-repeat="state in app.organization.states" value="NY" class="ng-binding ng-scope">NY</option><!-- end ngRepeat: state in app.organization.states --><option ng-repeat="state in app.organization.states" value="CA" class="ng-binding ng-scope">CA</option><!-- end ngRepeat: state in app.organization.states -->
                  </select>
                  <!-- city/region -->
                  <select ng-model="app.user.city" class="cui-input cui-select cui-input--half ng-pristine ng-untouched ng-valid">
                    <option value="" disabled="" selected="" class="ng-binding">City</option>
                    <!-- ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Chicago" class="ng-binding ng-scope">Chicago</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Aurora" class="ng-binding ng-scope">Aurora</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Rockford" class="ng-binding ng-scope">Rockford</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Joliet" class="ng-binding ng-scope">Joliet</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Naperville" class="ng-binding ng-scope">Naperville</option><!-- end ngRepeat: city in app.organization.cities --><option ng-repeat="city in app.organization.cities" value="Springfiled" class="ng-binding ng-scope">Springfiled</option><!-- end ngRepeat: city in app.organization.cities -->
                  </select>
                  <!-- postal code -->
                  <input type="text" ng-model="app.user.postal" class="cui-input cui-input--half--right ng-pristine ng-untouched ng-valid" placeholder="Postal code">
                  <!-- phone -->
                  <input type="number" ng-model="app.user.phone" class="cui-input cui-input--half ng-pristine ng-untouched ng-valid" placeholder="Telephone number">
                  <!-- timezone -->
                  <select ng-model="app.user.timezone" class="cui-input cui-select cui-input--half--right ng-pristine ng-untouched ng-valid">
                    <option value="" disabled="" selected="" class="ng-binding">Timezone</option>
                    <!-- ngRepeat: timezone in app.user.timezones --><option ng-repeat="timezone in app.user.timezones" value="-08:00" class="ng-binding ng-scope">-08:00</option><!-- end ngRepeat: timezone in app.user.timezones --><option ng-repeat="timezone in app.user.timezones" value="-07:00" class="ng-binding ng-scope">-07:00</option><!-- end ngRepeat: timezone in app.user.timezones --><option ng-repeat="timezone in app.user.timezones" value="-06:00" class="ng-binding ng-scope">-06:00</option><!-- end ngRepeat: timezone in app.user.timezones --><option ng-repeat="timezone in app.user.timezones" value="-05:00" class="ng-binding ng-scope">-05:00</option><!-- end ngRepeat: timezone in app.user.timezones --><option ng-repeat="timezone in app.user.timezones" value="-04:00" class="ng-binding ng-scope">-04:00</option><!-- end ngRepeat: timezone in app.user.timezones -->
                  </select>
                   <div class="cui-wizard__controls">
                    <button class="cui-wizard__previous ng-binding" ng-click="previous()">&lt;&lt; PREVIOUS</button>
                    <button class="cui-wizard__next ng-binding" ng-click="next()">NEXT STEP</button>
                  </div>
                </form>
              </step>
              <step title="Preferences">
                <div class="cui-wizard__controls">
                  <button class="cui-wizard__previous ng-binding" ng-click="previous()">&lt;&lt; PREVIOUS</button>
                  <button class="cui-wizard__next ng-binding" ng-click="next()">NEXT STEP</button>
                </div>
              </step>
              <step title="Review">
                <cui-expandable expanded="true" class="ng-scope">
                  <cui-expandable-title ng-click="toggleExpand()" class="ng-binding">
                    Organization info
                    <span class="chevron">&gt;</span>
                  </cui-expandable-title>
                  <cui-expandable-body>
                    <p class="ng-binding">Organization: Thirdwave LLC</p>
                    <p class="ng-binding">Company / Division: </p>
                    <p class="ng-binding">Address 1: </p>
                    <!-- ngIf: app.organization.address2 -->
                    <p class="ng-binding">Country: </p>
                    <p class="ng-binding">State / Province: </p>
                    <p class="ng-binding">City: </p>
                    <p class="ng-binding">Postal code: </p>
                  </cui-expandable-body>
                </cui-expandable>
                <cui-expandable class="ng-scope">
                  <cui-expandable-title ng-click="toggleExpand()" class="ng-binding">
                    Sign on info
                    <span class="chevron">&gt;</span>
                  </cui-expandable-title>
                  <cui-expandable-body>
                    <p class="ng-binding">User ID: </p>
                    <p class="ng-binding">Password: <input type="password" class="cui-input--display ng-pristine ng-untouched ng-valid" disabled="" ng-model="app.signOn.password1"></p>
                    <p class="ng-binding">Challenge question 1: </p>
                    <p class="ng-binding">Challenge answer 1: </p>
                    <p class="ng-binding">Challenge question 2: </p>
                    <p class="ng-binding">Challenge answer 2: </p>
                  </cui-expandable-body>
                </cui-expandable>
                <cui-expandable class="ng-scope">
                  <cui-expandable-title ng-click="toggleExpand()" class="ng-binding">
                    User info
                    <span class="chevron">&gt;</span>
                  </cui-expandable-title>
                  <cui-expandable-body>
                    <p class="ng-binding">First name: </p>
                    <p class="ng-binding">Last name: </p>
                    <p class="ng-binding">Email: </p>
                    <p class="ng-binding">Address 1: </p>
                    <p class="ng-binding">Address 2: </p>
                    <p class="ng-binding">Country: </p>
                    <p class="ng-binding">State / Province: </p>
                    <p class="ng-binding">City: </p>
                    <p class="ng-binding">Postal code: </p>
                    <p class="ng-binding">Telephone number: </p>
                    <p class="ng-binding">Timezone: </p>
                  </cui-expandable-body>
                </cui-expandable>
                <cui-expandable class="ng-scope">
                  <cui-expandable-title ng-click="toggleExpand()" class="ng-binding">
                    Preferences
                    <span class="chevron">&gt;</span>
                  </cui-expandable-title>
                  <cui-expandable-body>

                  </cui-expandable-body>
                </cui-expandable>
                <div class="cui-wizard__controls">
                  <button class="cui-wizard__previous ng-binding" ng-click="previous()">&lt;&lt; PREVIOUS</button>
                  <button class="cui-wizard__next ng-binding" ng-click="">SUBMIT</button>
                </div>
              </step>
            </cui-wizard>
          </div>
        <!-- ngIf: visible --><div class="language-select ng-scope" ng-if="visible" ng-translate-language-select=""><select ng-model="currentLocaleDisplayName" ng-options="localesDisplayName for localesDisplayName in localesDisplayNames" ng-change="changeLanguage(currentLocaleDisplayName)" class="ng-pristine ng-untouched ng-valid"><option label="Português (Portugal)" value="string:Português (Portugal)">Português (Portugal)</option><option label="English (United States)" value="string:English (United States)" selected="selected">English (United States)</option></select></div><!-- end ngIf: visible -->
      </div>

Styleguide 2.1
*/
.cui-wizard {
  border-radius: 6px;
  margin: 0 auto;
  max-width: 1000px;
  width: 80%; }
  .cui-wizard__body {
    background: white;
    border-radius: 0 0 6px 6px;
    margin: 0 auto;
    max-width: 100%;
    padding: 50px; }
  .cui-wizard__title {
    background-color: #429DD1;
    border-radius: 6px 6px 0 0;
    color: white;
    padding: 15px;
    text-align: center; }
  @media all and (max-width: 600px) {
    .cui-wizard {
      width: 90%; }
      .cui-wizard__body {
        padding: 20px; } }

.cui-error, .cui-error--half {
  color: red;
  font-size: 14px;
  margin-top: -15px;
  padding: 5px 12px 3px;
  position: relative; }
  .cui-error--half {
    width: 48%; }
    @media all and (max-width: 700px) {
      .cui-error--half {
        width: 100%; } }
  .cui-error__password {
    display: none;
    border: 1px solid #DDD;
    box-shadow: 0 0 3px 3px rgba(0, 0, 0, 0.09);
    padding: 10px 20px 20px;
    position: absolute;
    left: 100%;
    top: 0;
    width: 300px;
    border-radius: 7px;
    z-index: 2;
    background: white;
    transform: translate(10px, -30%);
    color: #888; }
    .cui-error__password::before {
      content: '▼';
      font-size: 16px;
      color: white;
      text-shadow: 2px 2px rgba(0, 0, 0, 0.09);
      position: absolute;
      top: 30%;
      left: 0;
      transform: rotate(90deg) translate(7px, 15px); }

cui-expandable {
  border-bottom: 1px solid #ddd;
  display: block;
  padding-bottom: 10px;
  width: 100%; }
  cui-expandable-title {
    color: #333;
    cursor: pointer;
    display: block;
    padding: 10px 0 0; }
  cui-expandable p {
    color: #666;
    font-size: 14px;
    line-height: .75; }
  cui-expandable:last-of-type {
    margin-bottom: 20px; }
  cui-expandable-body {
    display: block;
    max-height: 0;
    overflow: hidden;
    transition: all 200ms ease-in-out; }
  cui-expandable[expanded="true"] > cui-expandable-body {
    max-height: 500px; }
  cui-expandable[expanded="true"] > cui-expandable-title > .chevron {
    transform: rotate(90deg); }

.chevron {
  color: #53abd0;
  float: right;
  margin-right: 20px;
  transition: all 200ms ease-in-out; }

.cui-input {
  -webkit-appearance: none;
  -webkit-border-radius: 0px;
  border: 1px solid #ddd;
  box-sizing: border-box;
  font-size: 14px;
  margin-bottom: 20px;
  padding: 8px 12px;
  position: relative; }
  .cui-input:focus {
    border: 1px solid #828483; }
  .cui-input--display {
    border: 0;
    height: 14px;
    margin: -3px 0 -3px 1px;
    padding: 0;
    width: 200px; }
  .cui-input--full {
    width: 100%; }
  .cui-input--half {
    width: 48%; }
  .cui-input--half--right {
    float: right;
    width: 48%; }
  .cui-input--error, .cui-input--error:focus {
    border: 1px solid red; }
  .cui-input[type="password"]:focus + .cui-error__password {
    display: inline-block; }
  .cui-input.ng-touched.ng-valid {
    border: 1px solid #47CBB4; }
  @media all and (max-width: 700px) {
    .cui-input--half {
      width: 100%; }
    .cui-input--half--right {
      float: none;
      width: 100%; } }

.cui-container select {
  background-color: #fff; }

.cui-container select:focus, .cui-container input:focus {
  outline: 0; }

cui-wizard {
  display: block;
  margin: 0 auto;
  max-width: 800px;
  width: 100%; }

.cui-wizard__controls {
  text-align: right; }

.cui-wizard__next {
  background-color: #386895;
  border: 0;
  border-radius: 4px;
  color: #fff;
  font-size: 12px;
  height: 37px;
  width: 160px; }
  .cui-wizard__next--error {
    background-color: lightgray;
    cursor: default; }

.cui-wizard__previous {
  background: #fff;
  border: 0;
  color: #53abd0;
  cursor: pointer;
  font-size: 12px;
  margin-right: 20px; }
  .cui-wizard__previous.active {
    display: inline-block; }

.cui-wizard__skip {
  background: #fff;
  border: 0;
  color: #53abd0;
  cursor: pointer;
  font-size: 12px;
  display: none;
  margin-left: 20px; }
  .cui-wizard__skip--show {
    display: inline-block; }

indicator-container {
  border-bottom: 1px solid #ddd;
  display: flex;
  justify-content: space-between;
  margin-bottom: 40px; }
  indicator-container.small > .step-indicator {
    display: none;
    pointer-events: none; }
    indicator-container.small > .step-indicator.active {
      border: 0;
      display: inline-block;
      margin: 0 auto;
      text-align: center;
      color: #bbb; }

.step-indicator {
  color: #bbb;
  margin-bottom: -2px;
  padding: 10px 0;
  white-space: nowrap;
  display: inline-block; }
  .step-indicator.active {
    border-bottom: 6px solid #429DD1;
    color: #333; }

step {
  display: none; }
  step.active {
    display: block; }

/*
Header

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eu vehicula quam. In porta lorem turpis, eu lacinia sapien auctor ac. Donec vitae nibh egestas, cursus lacus vel, viverra mauris. Pellentesque maximus suscipit molestie. Vestibulum luctus augue nec efficitur pulvinar. Nunc purus dui, molestie eu tellus ac

Markup: <header class="cui-header">
          <div class="cui-header__top">
            <svg class="cui-header__svg-logo" viewBox="0 0 640 124"><use xlink:href="assets/img/svg-out.svg#covisint-logo"></use></svg>
            <cui-avatar class="cui-header__avatar" user="{{cuiUser}}"></cui-avatar>
          </div>
          <cui-top-menu ng-if="cuiTopMenu"></cui-top-menu>
          <!-- TODO : Search bar? -->
        </header>

Styleguide 2.2
*/
.cui-header {
  padding: 0 20px; }
  .cui-header__avatar {
    background: pink;
    height: 45px;
    margin-left: auto; }
  .cui-header__logo {
    background-repeat: no-repeat;
    background-size: contain;
    display: inline-block;
    height: 45px;
    width: 200px; }
  .cui-header__top {
    align-items: center;
    display: flex;
    height: 80px;
    padding: 0 0; }
  .cui-header__svg-logo {
    height: 45px;
    width: 200px; }
