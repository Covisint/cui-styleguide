// Forms
//
// Styles for form elements
// 
// Styleguide 1.3

/*
Inputs

:disabled               - Styling for a disabled input field
:focus                  - Styling when user clicks in a field to enter input
.cui-input--error       - Styling after user has entered input that is invalid
.cui-input--valid       - Styling after user has entered input that is valid

Markup: <input type="text" class="cui-input {{modifier_class}} cui-input--full"/>

Styleguide 1.3.1
*/

.cui-input {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  border: 1px solid $cui-input-border;
  box-sizing: border-box;
  font-size: em(14);
  height: 56px;
  margin: 5px 0 20px;
  padding: $input-padding;
  position: relative;
  width: 100%;
  
  &.pseudo-class-focus,
  &:focus {
    border: 1px solid $cui-input-border--focus;
    outline: 0;
  }

  &--display {
    border: 0;
    height: 14px;
    margin: -3px 0 -3px 1px;
    padding: 0;
    width: 200px;
  }

  &--half {
    width: 48%;
  }

  &--error,
  &--error:focus,
  &.ng-touched.ng-invalid,
  &.ng-touched.ng-invalid:focus {
    border: 1px solid $cui-input-border--invalid;
  }

  &__password-holder {
    width: 100%;
    float: none;
    position: relative;
    &--half {
      position: relative;
      float:left;
    }
  }

  &[type="password"] {
    &:focus {
      + .cui-error__password {
        display: inline-block;
      }
    }
  }

  &.ng-touched.ng-valid,
  &--valid {
    border: 1px solid $cui-input-border--valid;
  }

  @media all and (max-width:700px){
   &--half {
      width: 100%;
    }

    &__password--holder {
      &--half{
        width: 100%;
        float: none;
        > .cui-error__password {
          top:100%;
          right:0;
          transform: translate(-100%,0);
          &:before{
            top:0;
            left:50%;
            transform: translate(-50%,-90%) rotate(180deg);
          }
        }
      }
    }
  }
}

/*
Dropdown

Markup: <select class="cui-input cui-input--full cui-select">
            <option value="helloo"></option>
            <option value="hellloooo"></option>
            <option value="hellllooooooo"></option>
            <option value="HELLO"></option>
          </select>

Styleguide 1.3.2
*/

select.cui-select {
  @extend .cui-input;
  appearance: none;
  background: url('img/select-arrows.svg') right 10px center no-repeat;
  background-size: 17px 31px;
  border-radius: 0;
  padding-right: 10px;

  &:focus {
    outline: 0;
  }

}

/*
Radio

Markup:
<fieldset class="cui-radio__fieldset">
  <legend class="cui-radio__legend">Accessible description for radio button choice</legend>
  <div class="cui-radio__container">
    <input class="cui-radio" type="radio" name="radio-choice" id="radio-choice-1" value="choice-1" />
    <label class="cui-radio__label" for="radio-choice-1">Choice 1</label>
  </div>
  <div class="cui-radio__container">
    <input class="cui-radio" type="radio" name="radio-choice" id="radio-choice-2" value="choice-2" />
    <label class="cui-radio__label" for="radio-choice-2">Choice 2</label>
  </div>
</fieldset>

Styleguide 1.3.3
*/

.cui-radio {
  position: absolute;
  left: -999em;

  &__legend {
    left: -999em;
    position: absolute;
  }

  &__fieldset {
    border: 0;
    display: flex;
  }

  &__container {
    height: em(30);
  }

  &__label:before {
    border-radius: 50%;
    box-shadow: 0 0 0 2px $cui-greyscale--light, 0 0 0 3px $cui-greyscale--medium-light;
    content: "\00a0";
    display: inline-block;
    height: rem(18px);
    margin: em(-2px) em(8px) 0 0;
    vertical-align: top;
    width: rem(18px);
  }

  &:checked + .cui-radio__label::before {
    @extend .cui-primary-colors--medium-light;
  }
}